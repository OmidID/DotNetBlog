<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1">this is my long string</data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        [base64 mime encoded serialized .NET Framework object]
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        [base64 mime encoded string representing a byte array form of the .NET Framework object]
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Successful operation" xml:space="preserve">
    <value>Successful operation</value>
  </data>
  <data name="Change password" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Content" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Customize" xml:space="preserve">
    <value>Customize</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="Personal information" xml:space="preserve">
    <value>Personal information</value>
  </data>
  <data name="Setup" xml:space="preserve">
    <value>Setup</value>
  </data>
  <data name="Wrong username or password" xml:space="preserve">
    <value>Wrong username and password</value>
  </data>
  <data name="Category does not exists" xml:space="preserve">
    <value>Category does not exists</value>
  </data>
  <data name="Duplicate category name" xml:space="preserve">
    <value>Duplicate category name</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Confirm new password" xml:space="preserve">
    <value>Confirm new password</value>
  </data>
  <data name="Make sure the password is not inconsistent" xml:space="preserve">
    <value>Make sure the password is not inconsistent</value>
  </data>
  <data name="New password" xml:space="preserve">
    <value>New password</value>
  </data>
  <data name="New password should be between {0} - {1}" xml:space="preserve">
    <value>New password should be between {0} - {1}</value>
  </data>
  <data name="Old password" xml:space="preserve">
    <value>Old password</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="Article does not exists" xml:space="preserve">
    <value>Article does not exists</value>
  </data>
  <data name="Comment not exists" xml:space="preserve">
    <value>Comment not exists</value>
  </data>
  <data name="Comments not allow for this articles" xml:space="preserve">
    <value>Comments not allow for this articles</value>
  </data>
  <data name="Reply to comment not available" xml:space="preserve">
    <value>Reply to comment not available</value>
  </data>
  <data name="Wrong reply object" xml:space="preserve">
    <value>Wrong reply object</value>
  </data>
  <data name="Bad request" xml:space="preserve">
    <value>Bad request</value>
  </data>
  <data name="Email_NewComment" xml:space="preserve">
    <value>#Re:{0}
&lt;br/&gt;&lt;br/&gt;
{1}
&lt;hr/&gt;
Comment by: &lt;a href=""mailto://{2}"" target=""_blank""&gt;{3}&lt;/a&gt;
&lt;br/&gt;
URL: &lt;a href=""{4}"" target=""_blank""&gt;{4}&lt;/a&gt;</value>
  </data>
  <data name="Hello world" xml:space="preserve">
    <value>Hello world</value>
  </data>
  <data name="No email specified" xml:space="preserve">
    <value>No email specified</value>
  </data>
  <data name="Test Email" xml:space="preserve">
    <value>Test Email</value>
  </data>
  <data name="[Blog comment notification] Re: {0}" xml:space="preserve">
    <value>[Blog comment notification] Re: {0}</value>
  </data>
  <data name="or search for other resources" xml:space="preserve">
    <value>or search for other resources</value>
  </data>
  <data name="return to home page" xml:space="preserve">
    <value>return to home page</value>
  </data>
  <data name="You can" xml:space="preserve">
    <value>You can</value>
  </data>
  <data name="The server has encountered an error" xml:space="preserve">
    <value>The server has encountered an error</value>
  </data>
  <data name="Category: {0}" xml:space="preserve">
    <value>Category: {0}</value>
  </data>
  <data name="Invalid request, please try again later" xml:space="preserve">
    <value>Invalid request, please try again later</value>
  </data>
  <data name="Search result: {0}" xml:space="preserve">
    <value>Search result: {0}</value>
  </data>
  <data name="Tag: {0}" xml:space="preserve">
    <value>Tag: {0}</value>
  </data>
  <data name="Your comment has been added successfully and requires an administrator to approve it before it can be displayed" xml:space="preserve">
    <value>Your comment has been added successfully and requires an administrator to approve it before it can be displayed</value>
  </data>
  <data name="{0} year(s) and {1} month(s)" xml:space="preserve">
    <value>{0} year(s) and {1} month(s)</value>
  </data>
  <data name="Add welcome topic" xml:space="preserve">
    <value>Add welcome topic</value>
  </data>
  <data name="Administration" xml:space="preserve">
    <value>Administration</value>
  </data>
  <data name="Blog" xml:space="preserve">
    <value>Blog</value>
  </data>
  <data name="Blog Host" xml:space="preserve">
    <value>Blog Host</value>
  </data>
  <data name="Blog Title" xml:space="preserve">
    <value>Blog Title</value>
  </data>
  <data name="Confirm Password" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Nickname" xml:space="preserve">
    <value>Nickname</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Please check your password" xml:space="preserve">
    <value>Please check your password</value>
  </data>
  <data name="Please enter a valid email" xml:space="preserve">
    <value>Please enter a valid email</value>
  </data>
  <data name="Please enter the blog host" xml:space="preserve">
    <value>Please enter the blog host</value>
  </data>
  <data name="Please enter the blog title" xml:space="preserve">
    <value>Please enter the blog title</value>
  </data>
  <data name="Please enter your nickname" xml:space="preserve">
    <value>Please enter your nickname</value>
  </data>
  <data name="Please select the default language" xml:space="preserve">
    <value>Please select the default language</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Invalid request" xml:space="preserve">
    <value>Invalid request</value>
  </data>
  <data name="System Administrator" xml:space="preserve">
    <value>System Administrator</value>
  </data>
  <data name="Blog has been already installed" xml:space="preserve">
    <value>Blog has been already installed</value>
  </data>
  <data name="Not supported language" xml:space="preserve">
    <value>Not supported language</value>
  </data>
  <data name="Welcome comment" xml:space="preserve">
    <value>This is an example comment</value>
  </data>
  <data name="Welcome to DotNetBlog" xml:space="preserve">
    <value>Welcome to DotNetBlog</value>
  </data>
  <data name="Welcome topic content" xml:space="preserve">
    <value>Thanks to install DotNetBlog 😊. To modify this content and manage your blog you could open &lt;a href="/admin"&gt;Admin&lt;/a&gt; Page and login with your username and password.</value>
  </data>
  <data name="did you forget your password?" xml:space="preserve">
    <value>did you forget your password?</value>
  </data>
  <data name="Keep me logged in" xml:space="preserve">
    <value>Keep me logged in</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Login blog" xml:space="preserve">
    <value>Login blog</value>
  </data>
  <data name="please enter username" xml:space="preserve">
    <value>please enter username</value>
  </data>
  <data name="please enter your password" xml:space="preserve">
    <value>please enter your password</value>
  </data>
  <data name="please enter your username" xml:space="preserve">
    <value>please enter your username</value>
  </data>
  <data name="MM" xml:space="preserve">
    <value>{0:MMMM}</value>
  </data>
  <data name="Access to the page does not exist, you can" xml:space="preserve">
    <value>Access to the page does not exist, you can</value>
  </data>
  <data name="return to the home page" xml:space="preserve">
    <value>return to the home page</value>
  </data>
  <data name="Go back to the last page" xml:space="preserve">
    <value>Go back to the last page</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="After the article" xml:space="preserve">
    <value>After the article</value>
  </data>
  <data name="Before the article" xml:space="preserve">
    <value>Before the article</value>
  </data>
  <data name="Wrong paging parameters" xml:space="preserve">
    <value>Wrong paging parameters</value>
  </data>
  <data name="Parent does not exists" xml:space="preserve">
    <value>Parent does not exists</value>
  </data>
  <data name="Selected parent does not exists" xml:space="preserve">
    <value>Selected parent does not exists</value>
  </data>
  <data name="The page does not exists anymore" xml:space="preserve">
    <value>The page does not exists anymore</value>
  </data>
  <data name="You cannot set as parent" xml:space="preserve">
    <value>You cannot set as parent</value>
  </data>
  <data name="Wrote" xml:space="preserve">
    <value>Wrote</value>
  </data>
  <data name="Please sign in" xml:space="preserve">
    <value>Please sign in</value>
  </data>
  <data name="Enter the keyword for search" xml:space="preserve">
    <value>Enter the keyword for search</value>
  </data>
  <data name="search for" xml:space="preserve">
    <value>search for</value>
  </data>
  <data name="Search result" xml:space="preserve">
    <value>Search result</value>
  </data>
  <data name="Tag" xml:space="preserve">
    <value>Tag</value>
  </data>
  <data name="Enter the keyword search" xml:space="preserve">
    <value>Enter the keyword search</value>
  </data>
  <data name="Request page is wrong please try again later" xml:space="preserve">
    <value>Request page is wrong, please try again later...</value>
  </data>
  <data name="Sorry the system has made an error" xml:space="preserve">
    <value>Sorry, the system has made an error</value>
  </data>
  <data name="The label does not exists" xml:space="preserve">
    <value>The label does not exists</value>
  </data>
  <data name="The label name is duplicated" xml:space="preserve">
    <value>The label name is duplicated</value>
  </data>
  <data name="add comment" xml:space="preserve">
    <value>add comment</value>
  </data>
  <data name="Approve comments" xml:space="preserve">
    <value>Approve comments</value>
  </data>
  <data name="Are you sure you want to delete the article?" xml:space="preserve">
    <value>Are you sure you want to delete the article?</value>
  </data>
  <data name="Cancel the reply to the message" xml:space="preserve">
    <value>Cancel the reply to the message</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="comments ({0})" xml:space="preserve">
    <value>comments ({0})</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="E-mail" xml:space="preserve">
    <value>E-mail</value>
  </data>
  <data name="First name" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Notify me when there is a comment" xml:space="preserve">
    <value>Notify me when there is a comment</value>
  </data>
  <data name="Please enter your email" xml:space="preserve">
    <value>Please enter your email</value>
  </data>
  <data name="Please fill in the comments" xml:space="preserve">
    <value>Please fill in the comments</value>
  </data>
  <data name="Please fill in the name" xml:space="preserve">
    <value>Please fill in the name</value>
  </data>
  <data name="related articles" xml:space="preserve">
    <value>related articles</value>
  </data>
  <data name="Save comment" xml:space="preserve">
    <value>Save comment</value>
  </data>
  <data name="Unaudited comments ({0})" xml:space="preserve">
    <value>Unaudited comments ({0})</value>
  </data>
  <data name="Article does not exist" xml:space="preserve">
    <value>Article does not exist</value>
  </data>
  <data name="The article does not exists" xml:space="preserve">
    <value>The article does not exists</value>
  </data>
  <data name="Please upload the correct format image file" xml:space="preserve">
    <value>Please upload the correct format image file</value>
  </data>
  <data name="Duplicated email address" xml:space="preserve">
    <value>Duplicated email address</value>
  </data>
  <data name="User does not exists" xml:space="preserve">
    <value>User does not exists</value>
  </data>
  <data name="Wrong password" xml:space="preserve">
    <value>Wrong password</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="Categories" xml:space="preserve">
    <value>Categories</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Links</value>
  </data>
  <data name="Pages" xml:space="preserve">
    <value>Pages</value>
  </data>
  <data name="Recent articles" xml:space="preserve">
    <value>Recent articles</value>
  </data>
  <data name="Recent comments" xml:space="preserve">
    <value>Recent comments</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Are you sure you want to delete comments?" xml:space="preserve">
    <value>Are you sure you want to delete comments?</value>
  </data>
  <data name="Delete the message and reply" xml:space="preserve">
    <value>Delete the message and reply</value>
  </data>
  <data name="Delete the message, but leave the reply" xml:space="preserve">
    <value>Delete the message, but leave the reply</value>
  </data>
  <data name="Reply" xml:space="preserve">
    <value>Reply</value>
  </data>
  <data name="You are sure you want to delete comments?" xml:space="preserve">
    <value>You are sure you want to delete comments?</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="More" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="Unaudited comments({0})" xml:space="preserve">
    <value>Unaudited comments({0})</value>
  </data>
</root>